server:
  ip: localhost
  port: 8080
  servlet:
    context-path: ${SERVLET_CONTEXT_PATH:/one-to-one/api}

spring:
  datasource:
    url: jdbc:postgresql://172.17.0.1:5432/one_to_one
    username: ${DB_USERNAME:one_to_one}
    password: ${DB_PASSWORD:onetoone}

  mail:
    host: smtp.yandex.ru
    username: ${EMAIL_SENDER_LOGIN:defaultttttttttttttttt@mail.ru}
    password: ${EMAIL_SENDER_PASSWORD:defaultPassword}
    port: 465
    protocol: smtp
    properties:
      "mail.transport.protocol": smtp
      "mail.smtp.auth": true
      "mail.smtp.starttls.enable": true
      "mail.smtp.ssl.enable": true
      "mail.smtp.ssl.protocols": TLSv1.2
  cors:
    allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:8080, http://localhost:3000}
  security:
    basic:
      enabled: true
    management:
      security: true
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri:
  autoconfigure:
    jpa:
      generate-ddl: false

  kafka:
    bootstrap-server: ${KAFKA_SERVER:kafka:29092}
    producer:
      one-to-one:
        id: one-to-one-producer
    topics:
      user-answer:
        name: user-answer-topic
        key: user-answer-topic-key

jwt:
  secret:
    access: g54ges5tW$%tw45TEgsegrfdrfer
    refresh: 5w4gew5g4G$G4gsasgfDGSDG6regS
  expiration:
    access: 10
    refresh: 30
springdoc:
  swagger-ui:
    enabled: true
  swagger-ui.path: /swagger-ui.html

telegram:
  bot:
    username: Test-interview
    token: 6142549600:AAFVTnVizvJJcgEAqlFxfn185tLUEGxNFEs